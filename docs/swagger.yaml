basePath: /api
definitions:
  model.MottoResponse:
    properties:
      image_url:
        type: string
      lang_id:
        type: integer
      motto_id:
        type: integer
      name:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: Arassachylyk project
  title: Arassachylyk project
  version: "1.0"
paths:
  /admin/login:
    post:
      consumes:
      - multipart/form-data
      description: Login by providing username and password as form data to get a
        JWT token for authentication.
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Login successful, returns admin username and JWT token
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Missing or invalid input
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Invalid username or password
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login and get JWT token
      tags:
      - Login
  /categories:
    get:
      consumes:
      - application/json
      description: Retrieves all categories by language ID
      parameters:
      - description: Language ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of categories
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get all categories by langID
      tags:
      - Categories
    post:
      consumes:
      - multipart/form-data
      description: Create a new category by providing its translations in multiple
        languages (requires a valid JWT token in the Authorization header)
      parameters:
      - description: Category in Turkmen
        in: formData
        name: categoryTurkmen
        required: true
        type: string
      - description: Category in English
        in: formData
        name: categoryEnglish
        required: true
        type: string
      - description: Category in Russian
        in: formData
        name: categoryRussian
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new category
      tags:
      - Categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category by ID (requires valid JWT token in the Authorization
        header)
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted category
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid category ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a category
      tags:
      - Categories
  /contact:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Send a message from a contact form
      parameters:
      - description: Name of the sender
        in: formData
        name: name
        required: true
        type: string
      - description: Email of the sender
        in: formData
        name: email
        required: true
        type: string
      - description: Message content
        in: formData
        name: message
        required: true
        type: string
      - description: Phone number of the sender
        in: formData
        name: phone_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Mesaj başarıyla gönderildi
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: All fields are required
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Mesaj gönderilemedi
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Send a contact message
      tags:
      - Contact
  /images:
    post:
      consumes:
      - multipart/form-data
      description: Upload multiple images with associated titles in different languages.
        Requires a valid JWT token in the Authorization header.
      parameters:
      - description: Title in Turkmen
        in: formData
        name: titleTurkmen
        required: true
        type: string
      - description: Title in English
        in: formData
        name: titleEnglish
        required: true
        type: string
      - description: Title in Russian
        in: formData
        name: titleRussian
        required: true
        type: string
      - description: Images to upload
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added title and images
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid input or file size exceeds limit
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Upload multiple images and create a title with translations
      tags:
      - Images
  /images/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a title and its associated images by ID. Requires a valid
        JWT token in the Authorization header.
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted title and its images
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid title ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Invalid or expired token
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a title and its associated images
      tags:
      - Images
  /images/all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of images filtered by language using the lang_id
        query parameter
      parameters:
      - description: Language ID (e.g., 1 for Turkmen, 2 for English, 3 for Russian)
        in: query
        name: lang_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved images
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid lang_id
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get images by language
      tags:
      - Images
  /motto:
    get:
      consumes:
      - application/json
      description: Retrieves all mottos with translations filtered by language ID.
        Requires a valid Bearer token.
      parameters:
      - description: Language ID
        in: query
        name: lang_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MottoResponse'
            type: array
        "400":
          description: Invalid language ID format
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: No mottos found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Cannot retrieve mottos
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get all mottos
      tags:
      - Motto
    post:
      consumes:
      - multipart/form-data
      description: Adds a new motto with translations in three languages (Turkmen,
        English, Russian) and an image upload. Requires a valid Bearer token.
      parameters:
      - description: Motto name in Turkmen
        in: formData
        name: nameTurkmen
        required: true
        type: string
      - description: Motto name in English
        in: formData
        name: nameEnglish
        required: true
        type: string
      - description: Motto name in Russian
        in: formData
        name: nameRussian
        required: true
        type: string
      - description: Motto image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Add a new motto
      tags:
      - Motto
  /motto/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a motto by its ID. Requires a valid Bearer token.
      parameters:
      - description: Motto ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Cannot get motto by ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Cannot delete year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a motto
      tags:
      - Motto
  /news:
    get:
      consumes:
      - application/json
      description: Fetch all news based on language ID and category ID
      parameters:
      - description: Category ID
        in: query
        name: category_id
        required: true
        type: integer
      - description: Language ID
        in: query
        name: lang_id
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of news
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all news by language and category
      tags:
      - News
    post:
      consumes:
      - multipart/form-data
      description: Creates a news item with category, image, and translations in Turkmen,
        English, and Russian
      parameters:
      - description: Category ID
        in: formData
        name: category_id
        required: true
        type: integer
      - description: Image file
        in: formData
        name: image
        required: true
        type: file
      - description: Title in Turkmen
        in: formData
        name: title_tkm
        required: true
        type: string
      - description: Description in Turkmen
        in: formData
        name: description_tkm
        required: true
        type: string
      - description: Title in English
        in: formData
        name: title_eng
        required: true
        type: string
      - description: Description in English
        in: formData
        name: description_eng
        required: true
        type: string
      - description: Title in Russian
        in: formData
        name: title_rus
        required: true
        type: string
      - description: Description in Russian
        in: formData
        name: description_rus
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created news
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid input or bad request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a news item
      tags:
      - News
  /news/{id}:
    delete:
      description: Deletes a news by its ID
      parameters:
      - description: News ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: News deleted successfully
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Could not delete news
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a news
      tags:
      - News
  /news/all:
    get:
      consumes:
      - application/json
      description: Retrieves all news articles available in a specific language by
        language ID with pagination.
      parameters:
      - description: Language ID
        in: query
        name: lang_id
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of news articles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid Language ID or Pagination Parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get all news in a specific language
      tags:
      - News
  /videos:
    get:
      consumes:
      - application/json
      description: Retrieve a list of videos filtered by language using the lang_id
        query parameter
      parameters:
      - description: Language ID (1 for Turkmen, 2 for English, 3 for Russian)
        in: query
        name: lang_id
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved videos
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get videos by language
      tags:
      - Videos
    post:
      consumes:
      - multipart/form-data
      description: Upload multiple videos with their title translations in different
        languages (e.g., Turkmen, English, Russian).
      parameters:
      - description: Title in Turkmen
        in: formData
        name: titleTurkmen
        required: true
        type: string
      - description: Title in English
        in: formData
        name: titleEnglish
        required: true
        type: string
      - description: Title in Russian
        in: formData
        name: titleRussian
        required: true
        type: string
      - description: Video files
        in: formData
        name: videos
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uploaded videos
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid form data or file size exceeds the limit
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to upload video
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Upload videos with title translations
      tags:
      - Videos
  /videos/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a video by ID and removes associated files from the file
        system and database
      parameters:
      - description: Video Title ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Videos deleted successfully
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete files
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete video and associated files
      tags:
      - Videos
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
